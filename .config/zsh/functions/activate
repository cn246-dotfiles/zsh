option="$1"

venv_base_dir="$HOME/.local/lib/venv"

case "${option}" in
  '' | ansible)
    venv_path="${venv_base_dir}/ansible"
    ;;
  aws)
    venv_path="${venv_base_dir}/aws"
    ;;
  *)
    printf '%s\n' "Sorry, a venv has not been configured for that argument."
    printf '%s\n' "Available venvs in ${venv_base_dir}:"
    find ${venv_base_dir} -maxdepth 1 -mindepth 1 -type d -exec basename {} \; | nl
    return 1
    ;;
esac

if [ -d "${venv_path}" ]; then
  source "${venv_path}/bin/activate"

  if [ ${venv_path} = "${venv_base_dir}/ansible" ]; then
    eval $(register-python-argcomplete ansible)
    eval $(register-python-argcomplete ansible-config)
    eval $(register-python-argcomplete ansible-console)
    eval $(register-python-argcomplete ansible-doc)
    eval $(register-python-argcomplete ansible-galaxy)
    eval $(register-python-argcomplete ansible-inventory)
    eval $(register-python-argcomplete ansible-playbook)
    eval $(register-python-argcomplete ansible-pull)
    eval $(register-python-argcomplete ansible-vault)
  fi

  unset venv_path
else
  printf '%s\n' "Could not find a venv at the specified location (${venv_path})."
  unset venv_path
  return 1
fi

# vim: ft=zsh ts=2 sts=2 sw=2 sr et
